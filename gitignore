# IRCTC Tatkal Automation Bot - Git Ignore File

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.
#  For PyCharm Community Edition, use 'Community' instead of 'Professional'.
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Application-specific files
config/*.json
!config/*_template.json
!config/app_config.json

# Logs
logs/*.log
logs/*.log.*
*.log

# Temporary files
temp/
tmp/
*.tmp

# Database files
*.db
*.sqlite
*.sqlite3

# Cache files
.cache/
cache/

# Upload files
uploads/
static/uploads/

# Screenshots and images (except templates)
temp/*.png
temp/*.jpg
temp/*.jpeg
temp/*.gif
logs/*.png
logs/*.jpg

# Backup files
*.bak
*.backup
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
desktop.ini

# Linux
.directory

# Encrypted files
*.enc
*.encrypted

# SSL Certificates
*.pem
*.key
*.crt
*.cert

# Docker files
.dockerignore

# Node modules (if using Node.js for frontend build)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build artifacts
build/
dist/

# Local configuration overrides
local_settings.py
local_config.py

# IDE files
*.iml
*.ipr
*.iws

# Coverage reports
.coverage
htmlcov/

# Pytest
.pytest_cache/

# Jupyter checkpoints
.ipynb_checkpoints/

# pyenv version file
.python-version

# Elastic Beanstalk Files
.elasticbeanstalk/*
!.elasticbeanstalk/*.cfg.yml
!.elasticbeanstalk/*.global.yml

# AWS credentials
.aws/

# Terraform files
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible files
*.retry

# Kubernetes
*.kubeconfig

# Vagrant
.vagrant/

# Local environment files
.env.local
.env.development.local
.env.test.local
.env.production.local

# Redis dump file
dump.rdb

# Sentry files
.sentryclirc

# Playwright
test-results/
playwright-report/
playwright/.cache/

# Application specific
irctc_bot.db
booking_results.json
user_*.enc

# Monitoring and metrics
prometheus_data/
grafana_data/

# Docker volumes
docker_volumes/

# Backup files
backups/
*.backup

# Lock files (except package managers)
*.lock
!package-lock.json
!yarn.lock
!poetry.lock

# Editor swap files
.*.swp
.*.swo

# MacOS
.AppleDouble
.LSOverride

# Icon files
Icon

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.TemporaryItems
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Python virtual environments
pyvenv.cfg
pip-selfcheck.json

# Flask session files
flask_session/

# Celery
celerybeat.pid
celerybeat-schedule.db

# Redis
redis.conf

# Local development files
dev_*.py
test_*.py
debug_*.py

# API keys and secrets
secrets.json
api_keys.json
credentials.json

# Performance profiling
*.prof
*.pstats

# Memory dumps
*.dump
*.hprof

# Application logs by date
logs/app-*.log
logs/error-*.log
logs/access-*.log

# Compressed files
*.zip
*.tar.gz
*.tgz
*.rar
*.7z

# Temporary Python cache
*.pyc
*__pycache__*

# Local SQLite databases
*.sqlite-journal
*.sqlite-wal
*.sqlite-shm